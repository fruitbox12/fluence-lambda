/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.4-322
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v3';


// Services

export interface AccountServiceDef {
    createAccount: (user: { password: string; privateKey: string; publicKey: string; timestamp_ms: number; }, callParams: CallParams<'user'>) => boolean | Promise<boolean>;
    getFileUploadHistory: (publicKey: string, privateKey: string, callParams: CallParams<'publicKey' | 'privateKey'>) => string[] | Promise<string[]>;
}
export function registerAccountService(service: AccountServiceDef): void;
export function registerAccountService(serviceId: string, service: AccountServiceDef): void;
export function registerAccountService(peer: FluencePeer, service: AccountServiceDef): void;
export function registerAccountService(peer: FluencePeer, serviceId: string, service: AccountServiceDef): void;
       

export function registerAccountService(...args: any) {
    registerService(
        args,
        {
    "defaultServiceId" : "AccountService",
    "functions" : {
        "tag" : "labeledProduct",
        "fields" : {
            "createAccount" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "user" : {
                            "tag" : "struct",
                            "name" : "User",
                            "fields" : {
                                "password" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                },
                                "privateKey" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                },
                                "publicKey" : {
                                    "tag" : "scalar",
                                    "name" : "string"
                                },
                                "timestamp_ms" : {
                                    "tag" : "scalar",
                                    "name" : "f64"
                                }
                            }
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "scalar",
                            "name" : "bool"
                        }
                    ]
                }
            },
            "getFileUploadHistory" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "labeledProduct",
                    "fields" : {
                        "publicKey" : {
                            "tag" : "scalar",
                            "name" : "string"
                        },
                        "privateKey" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "array",
                            "type" : {
                                "tag" : "scalar",
                                "name" : "string"
                            }
                        }
                    ]
                }
            }
        }
    }
}
    );
}
      
// Functions

