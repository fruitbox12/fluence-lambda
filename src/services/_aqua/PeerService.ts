/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.4-322
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v3';


// Services

export interface PeerServiceDef {
    getPeers: (callParams: CallParams<null>) => { peers: string[]; } | Promise<{ peers: string[]; }>;
}
export function registerPeerService(service: PeerServiceDef): void;
export function registerPeerService(serviceId: string, service: PeerServiceDef): void;
export function registerPeerService(peer: FluencePeer, service: PeerServiceDef): void;
export function registerPeerService(peer: FluencePeer, serviceId: string, service: PeerServiceDef): void;
       

export function registerPeerService(...args: any) {
    registerService(
        args,
        {
    "defaultServiceId" : "Peer_service",
    "functions" : {
        "tag" : "labeledProduct",
        "fields" : {
            "getPeers" : {
                "tag" : "arrow",
                "domain" : {
                    "tag" : "nil"
                },
                "codomain" : {
                    "tag" : "unlabeledProduct",
                    "items" : [
                        {
                            "tag" : "struct",
                            "name" : "Peers",
                            "fields" : {
                                "peers" : {
                                    "tag" : "array",
                                    "type" : {
                                        "tag" : "scalar",
                                        "name" : "string"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        }
    }
}
    );
}
      
// Functions

